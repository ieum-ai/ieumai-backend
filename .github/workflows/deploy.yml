# .github/workflows/deploy.yml

name: Deploy to EC2 on main push

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
    # 1. EC2에서 코드 업데이트 및 빌드 실행 (Actions 로그에 출력)
    - name: Prepare and Build on EC2
      id: build # 단계 ID 부여 (선택 사항)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          WORK_DIR="/home/ec2-user/ieumai-backend" # 작업 디렉토리
          BRANCH_NAME="main"                      # 브랜치 이름
          JAR_NAME="ieumai-backend-0.0.1-SNAPSHOT.jar" # 예상되는 JAR 파일 이름
          PLAIN_JAR_NAME="ieumai-backend-0.0.1-SNAPSHOT-plain.jar" # 예상되는 Plain JAR 이름

          echo "=== Starting Preparation and Build on EC2 ==="
          echo "Working directory: $WORK_DIR"
          cd $WORK_DIR

          echo "[1/4] Cleaning previous artifacts..."
          # rm 명령어에 -f 옵션을 추가하여 파일이 없어도 오류를 내지 않도록 함
          rm -f ./build/libs/$JAR_NAME
          rm -f ./build/libs/$PLAIN_JAR_NAME
          echo "Clean complete."

          echo "[2/4] Pulling latest code from Git repository ($BRANCH_NAME branch)..."
          # git pull 실행 전 stash 또는 reset이 필요할 수 있음 (로컬 변경사항 충돌 방지)
          # 예: git stash && git pull origin $BRANCH_NAME && git stash pop
          git pull origin $BRANCH_NAME
          echo "Pull complete."

          echo "[3/4] Ensuring Gradle wrapper is executable..."
          if [ ! -x ./gradlew ]; then
              echo "Warning: ./gradlew does not have execute permissions. Granting permissions."
              chmod +x ./gradlew
          else
              echo "./gradlew is already executable."
          fi

          echo "[4/4] Building the project using Gradle..."
          ./gradlew build
          echo "Build complete."

          # 빌드 후 예상되는 JAR 파일이 생성되었는지 확인 (선택 사항)
          if [ ! -f "./build/libs/$JAR_NAME" ]; then
              echo "Error: Expected JAR file $JAR_NAME not found after build."
              exit 1 # 오류 발생 시 워크플로우 중단
          fi

          echo "=== Preparation and Build on EC2 Finished ==="


    # 2. EC2 Screen 세션 관리 및 Java 앱 실행
    - name: Manage Screen Session and Run Java App
      # 이전 빌드 단계가 성공했을 때만 실행되도록 dependencies 추가 가능 (선택 사항)
      # needs: build
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST_IP }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22
        script: |
          WORK_DIR="/home/ec2-user/ieumai-backend"
          # 실행할 JAR 파일의 전체 경로 (고정된 이름 사용)
          JAR_PATH="$WORK_DIR/build/libs/ieumai-backend-0.0.1-SNAPSHOT.jar"
          SESSION_NAME="ieumai-backend"

          # 1. 기존 세션 확인 및 종료 (Java 프로세스 종료 시도)
          echo "Checking for existing screen session: $SESSION_NAME"
          if screen -ls | grep -q "\.$SESSION_NAME\s"; then
            echo "Existing session found. Terminating process and session..."
            # screen 내부에 Ctrl+C를 보내거나, 직접 pkill로 Java 프로세스를 죽이는 것이 더 확실할 수 있습니다.
            # 예시: pkill -f ieumai-backend-0.0.1-SNAPSHOT.jar || echo "Java process not found or already stopped."
            # sleep 2 # 프로세스가 종료될 시간 확보

            screen -S $SESSION_NAME -X quit # screen 세션 종료 요청
            sleep 1
            echo "Existing session terminated command sent."
            # 만약을 위해 다시 한번 프로세스 종료 시도 (선택 사항)
            # pkill -f ieumai-backend-0.0.1-SNAPSHOT.jar || echo "Java process likely already stopped."
          else
            echo "No existing session found."
          fi

          # 2. 새 세션 생성
          echo "Creating new detached screen session: $SESSION_NAME"
          screen -S $SESSION_NAME -d -m

          # 3. 새 세션에 디렉토리 이동 및 Java 앱 실행 명령어 전송
          # 이제 빌드는 끝났으므로, java -jar만 실행합니다.
          COMMAND_TO_RUN="cd $WORK_DIR && java -jar $JAR_PATH"
          echo "Sending command to new session: $COMMAND_TO_RUN"
          screen -S $SESSION_NAME -X stuff "$COMMAND_TO_RUN$(printf '\r')" # 명령어 + Enter 키 입력 효과

          echo "Java application start command sent successfully to $SESSION_NAME."
